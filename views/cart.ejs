<!DOCTYPE html>
<html lang="en" class="scroll-smooth">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Cart - BuildOnBudget</title>
  <link href="/output.css" rel="stylesheet" />
  <link href="/toast.css" rel="stylesheet" />
  <link rel="shortcut icon" href="/images/logo.png" type="image/x-icon" />
  <script defer src="/javascript/index.js"></script>
</head>

<body class="bg-bg-primary text-text-primary min-h-screen flex flex-col">
  <header class="bg-bg-secondary shadow-md sticky top-0 z-50 p-4">
    <div class="flex justify-between items-center">
      <h1 class="text-3xl font-bold text-purple-600">Your Cart</h1>
      <a href="/shop" class="bg-accent px-4 py-2 rounded text-text-primary hover:bg-accent/90">Continue Shopping</a>
    </div>
  </header>

  <main class="flex-grow p-4 md:p-8 max-w-4xl mx-auto">
    <% if (cartItems.length === 0) { %>
      <p class="text-text-secondary text-center">Your cart is empty. <a href="/shop" class="text-accent">Shop now</a></p>
    <% } else { %>
      <div class="space-y-4">
        <% cartItems.forEach(item => { %>
          <div class="bg-bg-secondary rounded-lg shadow p-4 flex flex-col md:flex-row md:items-center md:justify-between">
            <div class="flex items-center space-x-4 mb-4 md:mb-0">
              <img src="<%= item.image || '/images/logo.png' %>" alt="<%= item.name %>" class="h-16 w-16 object-cover rounded" />
              <div>
                <h3 class="text-lg font-semibold"><%= item.name %></h3>
                <p class="text-text-secondary">$<%= parseFloat(item.price).toFixed(2) %> each</p>
              </div>
            </div>
            <div class="flex items-center space-x-4">
              <input type="number" min="1" value="<%= item.quantity %>" data-id="<%= item.id %>"
                class="quantity-input w-16 border border-border rounded px-2 py-1 text-center" />
          <span class="font-bold">$<%= parseFloat(item.total) %></span>
              <button data-id="<%= item.id %>" class="remove-btn text-red-500 hover:underline">Remove</button>
            </div>
          </div>
        <% }) %>
      </div>
      <div class="mt-8 bg-bg-secondary rounded-lg shadow p-4">
        <div class="flex justify-between items-center">
          <span class="text-xl font-bold">Total: $<%= cartItems.reduce((sum, item) => sum + parseFloat(item.total), 0).toFixed(2) %></span>
          <button id="checkout-btn" class="bg-accent px-6 py-2 rounded text-white hover:bg-accent/90">Checkout</button>
        </div>
      </div>
    <% } %>
  </main>

  <footer class="bg-bg-secondary text-text-secondary text-center py-4 border-t border-border">
    &copy; <%= new Date().getFullYear() %> BuildOnBudget. All rights reserved.
  </footer>

  <script>
    // Update quantity
    document.querySelectorAll('.quantity-input').forEach(input => {
      input.addEventListener('change', async () => {
        const itemId = input.getAttribute('data-id');
        const quantity = input.value;
        try {
          const response = await fetch('/cart/update', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ item_id: itemId, quantity })
          });
          if (response.ok) {
            location.reload(); // Refresh to update totals
          } else {
            showToast('Failed to update quantity', 'error');
          }
        } catch (error) {
          showToast('An error occurred', 'error');
        }
      });
    });

    // Remove item
    document.querySelectorAll('.remove-btn').forEach(button => {
      button.addEventListener('click', async () => {
        const itemId = button.getAttribute('data-id');
        try {
          const response = await fetch('/cart/update', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ item_id: itemId, quantity: 0 })
          });
          if (response.ok) {
            location.reload();
          } else {
            showToast('Failed to remove item', 'error');
          }
        } catch (error) {
          showToast('An error occurred', 'error');
        }
      });
    });

    // Checkout
    document.getElementById('checkout-btn')?.addEventListener('click', async () => {
      const button = document.getElementById('checkout-btn');
      button.disabled = true;
      button.textContent = 'Processing...';
      try {
        const response = await fetch('/cart/checkout', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' }
        });
        const result = await response.json();
        if (response.ok) {
          showToast('Order placed successfully', 'success');
          setTimeout(() => location.href = '/dashboard', 1000);
        } else {
          showToast(result.error || 'Failed to place order', 'error');
          button.disabled = false;
          button.textContent = 'Checkout';
        }
      } catch (error) {
        showToast('An error occurred', 'error');
        button.disabled = false;
        button.textContent = 'Checkout';
      }
    });
  </script>
  <script src="/javascript/toast.js"></script>
</body>

</html>
